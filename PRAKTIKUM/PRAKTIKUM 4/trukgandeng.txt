/*Nama File 	: trukgandeng.cpp*/
/*Deskripsi 	: Membuat truk gandeng 3d memanfaatkan depth dan lighting*/
/*Pembuat   	: [Muhammad Rafasya Putra Ristianto - 24060121130074]*/
/*Tgl Pembuatan	: [rabu, 16 Maret 2022]*/

#include <math.h>
#include <GL/glut.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

float angle=0.0, deltaAngle = 0.0, ratio;
float x=0.0f,y=1.75f,z=15.0f; // posisi awal kamera
float lx=0.0f,ly=0.0f,lz=-1.0f;
int deltaMove = 0,h,w;
int bitmapHeight=12;
void Reshape(int w1, int h1)
{
	// Fungsi reshape
	if(h1 == 0) h1 = 1;
	w = w1;
	h = h1;
	ratio = 1.0f * w / h;
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glViewport(0, 0, w, h);
	gluPerspective(45,ratio,0.1,1000);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
	gluLookAt(
		x, y, z,
		x + lx,y + ly,z + lz,
		0.0f,1.0f,0.0f);
}
void orientMe(float ang)
{
	// Fungsi ini untuk memutar arah kamera (tengok kiri/kanan)
	lx = sin(ang);
	lz = -cos(ang);
	glLoadIdentity();
	gluLookAt(
		x, y, z,
		x + lx,y + ly,z + lz,
		0.0f,1.0f,0.0f);
}
void moveMeFlat(int i)
{
	// Fungsi ini untuk maju mundur kamera
	x = x + i*(lx)*0.1;
	z = z + i*(lz)*0.1;
	glLoadIdentity();
	gluLookAt(
		x, y, z,
		x + lx,y + ly,z + lz,
		0.0f,1.0f,0.0f);
}
void Grid() {
	// Fungsi untuk membuat grid di "lantai"
	double i;
	const float Z_MIN = -50, Z_MAX = 50;
	const float X_MIN = -50, X_MAX = 50;
	const float gap = 1.5;
	glColor3f(0.5, 0.5, 0.5);
	glBegin(GL_LINES);
	for(i=Z_MIN;i<Z_MAX;i+=gap)
{
	glVertex3f(i, 0, Z_MIN);
	glVertex3f(i, 0, Z_MAX);
}
	for(i=X_MIN;i<X_MAX;i+=gap)
{
	glVertex3f(X_MIN, 0, i);
	glVertex3f(X_MAX, 0, i);
}
	glEnd();
}
void TrukGandeng()
{
	glColor3f(0.0,0.6,0.1);
	glPushMatrix();
	glTranslatef(0,0.7,0);
	//depan
	glPushMatrix();
		glTranslatef(0,0,3);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,2.0f,0.0f);
		glVertex3f(2.0f,2.0f,0.0f);
		glVertex3f(2.0f,0.0f,0.0f);
		glVertex3f(-2.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix(); 
	glPushMatrix(); 
		glTranslatef(0.0,0.0,3.72);
		glRotated(-20.0,1.0,0.0,0.0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,4.0f,0.0f);
		glVertex3f(2.0f,4.0f,0.0f);
		glVertex3f(2.0f,2.1f,0.0f);
		glVertex3f(-2.0f,2.1f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix(); //kanan
		glTranslatef(2,0,1);
		glRotated(90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,2.0f,0.0f);
		glVertex3f(1.0f,2.0f,0.0f);
		glVertex3f(1.0f,0.0f,0.0f);
		glVertex3f(-2.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glTranslatef(2,0,2); 
		glRotated(90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-0.35f,3.76f,0.0f);
		glVertex3f(2.0f,3.76f,0.0f);
		glVertex3f(2.0f,2.0f,0.0f);
		glVertex3f(-1.0f,2.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glTranslatef(-2,0,1); //kiri
		glRotated(90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,2.0f,0.0f);
		glVertex3f(1.0f,2.0f,0.0f);
		glVertex3f(1.0f,0.0f,0.0f);
		glVertex3f(-2.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glTranslatef(-2,0,2); 
		glRotated(90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-0.35f,3.76f,0.0f);
		glVertex3f(2.0f,3.76f,0.0f);
		glVertex3f(2.0f,2.0f,0.0f);
		glVertex3f(-1.0f,2.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();//atas
		glTranslatef(0,3.76,2.37);
		glRotated(-90,1,0,0);
		glBegin(GL_QUADS);
		glTexCoord2f(0.0f,0.0f);
		glVertex3f(-2.0f,2.4f,0.0f);
		glVertex3f(2.0f,2.4f,0.0f);
		glVertex3f(2.0f,0.0f,0.0f);
		glVertex3f(-2.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();//bawah
		glTranslatef(0,0,0);
		glRotated(90,1,0,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,3.0f,0.0f);
		glVertex3f(2.0f,3.0f,0.0f);
		glVertex3f(2.0f,0.0f,0.0f);
		glVertex3f(-2.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();//belakang
		glTranslatef(0,3.76,0);
		glRotated(-180,1,0,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,3.76f,0.0f);
		glVertex3f(2.0f,3.76f,0.0f);
		glVertex3f(2.0f,0.0f,0.0f);
		glVertex3f(-2.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(0.0f,0.0f,0.0f);
	    glTranslatef(-2,0,1.5);
	    glRotated(90,0,1,0);
	    glutSolidTorus(0.3,0.4,14,30);  // roda depan kiri
    glPopMatrix();
    glPushMatrix();
	    glColor3f(0.0f,0.0f,0.0f);
	    glTranslatef(2,0,1.5);
	    glRotated(90,0,1,0);
	    glutSolidTorus(0.3,0.4,14,30); // roda depan kanan
    glPopMatrix();
    glPushMatrix();
		glColor3f(0.0f,0.0f,0.0f);
	    glTranslatef(-2,0,-5.5);
	    glRotated(90,0,1,0);
	    glutSolidTorus(0.3,0.4,14,30);  // roda belakang kiri
    glPopMatrix();
    glPushMatrix();
	    glColor3f(0.0f,0.0f,0.0f);
	    glTranslatef(2,0,-5.5);
	    glRotated(90,0,1,0);
	    glutSolidTorus(0.3,0.4,14,30); // roda belakang kanan
    glPopMatrix();
    glPushMatrix(); //kaca depan
	    glColor3f(0.8f,0.8f,0.8f);
		glTranslatef(0.0,0.0,3.74);
		glRotated(-20.0,1.0,0.0,0.0);
		glBegin(GL_QUADS);
		glVertex3f(-1.8f,3.8f,0.0f);
		glVertex3f(1.8f,3.8f,0.0f);
		glVertex3f(1.8f,2.2f,0.0f);
		glVertex3f(-1.8f,2.2f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glTranslatef(2.001,0.5,2); //kaca kanan
		glScalef(0.8,0.8,0.7);
		glRotated(90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-0.35f,3.76f,0.0f);
		glVertex3f(2.0f,3.76f,0.0f);
		glVertex3f(2.0f,2.0f,0.0f);
		glVertex3f(-1.0f,2.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glTranslatef(-2.001,0.5,2); //kaca kiri
		glScalef(0.8,0.8,0.7);
		glRotated(90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-0.35f,3.76f,0.0f);
		glVertex3f(2.0f,3.76f,0.0f);
		glVertex3f(2.0f,2.0f,0.0f);
		glVertex3f(-1.0f,2.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(0,0,0);//hiasan hitam
		glScalef(0.83,0.9,1);
		glTranslatef(0.27,0.75,3.001);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,1.0f,0.0f);
		glVertex3f(1.5f,1.0f,0.0f);
		glVertex3f(1.3f,0.5f,0.0f);
		glVertex3f(-1.8f,0.5f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(0,0,0);
		glScalef(0.7,0.9,1);
		glTranslatef(0.27,0.2,3.001);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,1.0f,0.0f);
		glVertex3f(1.5f,1.0f,0.0f);
		glVertex3f(1.3f,0.5f,0.0f);
		glVertex3f(-1.8f,0.5f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(0,0,0);
		glScalef(1.1,1,1);
		glTranslatef(0.27,-0.45,3.001);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,1.0f,0.0f);
		glVertex3f(1.5f,1.0f,0.0f);
		glVertex3f(1.5f,0.5f,0.0f);
		glVertex3f(-2.0f,0.5f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(0,0.7,0);
		glTranslatef(-2.001,0.0,3.7); //pintu kiri
		glRotated(90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,2.1f,0.0f);
		glVertex3f(3.1f,2.1f,0.0f);
		glVertex3f(3.1f,0.0f,0.0f);
		glVertex3f(1.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(0.2,0.2,0.2);
		glTranslatef(-2.002,0.5,2.6);
		glRotated(90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(1.4f,1.2f,0.0f);
		glVertex3f(1.8f,1.2f,0.0f);
		glVertex3f(1.8f,1.1f,0.0f);
		glVertex3f(1.4f,1.1f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(0,0.7,0);
		glTranslatef(2.001,0.0,3.7); //pintu kanan
		glRotated(90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,2.1f,0.0f);
		glVertex3f(3.1f,2.1f,0.0f);
		glVertex3f(3.1f,0.0f,0.0f);
		glVertex3f(1.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(0.2,0.2,0.2);
		glTranslatef(2.002,0.5,2.6);
		glRotated(90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(1.4f,1.2f,0.0f);
		glVertex3f(1.8f,1.2f,0.0f);
		glVertex3f(1.8f,1.1f,0.0f);
		glVertex3f(1.4f,1.1f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,1,1);//lampu depan kanan
		glTranslatef(0.9,0.1,3.001);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(0.6f,1.0f,0.0f);
		glVertex3f(0.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,1,0);
		glTranslatef(0.7,0.0,3.002);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(0.6f,1.0f,0.0f);
		glVertex3f(0.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,1,1); //lampu depan kiri
		glTranslatef(-2.9,0.1,3.001);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.6f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,1,0);
		glTranslatef(-2.7,0.0,3.002);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.6f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
    glPushMatrix();
		glColor3f(1,1,1); //lampu belakang kiri
		glTranslatef(-2.3,-0.5,-7.003);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,0,0);
		glTranslatef(-2.6,-0.5,-7.002);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,1,0);
		glTranslatef(-2.95,-0.5,-7.001);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,1,1); //lampu belakang kanan
		glTranslatef(-0.1,-0.5,-7.003);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,0,0);
		glTranslatef(0.2,-0.5,-7.002);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,1,0);
		glTranslatef(0.55,-0.5,-7.001);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
 	glPushMatrix();//belakang
	glColor3f(0.3,0.3,0.3);//depan
		glTranslatef(-1,-0.5,-0.001);
		glBegin(GL_QUADS);
		glVertex3f(-1.0f,1.0f,0.0f);
		glVertex3f(3.0f,1.0f,0.0f);
		glVertex3f(3.0f,0.5f,0.0f);
		glVertex3f(-1.0f,0.5f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);//bawah
		glTranslatef(0,0.0,-5.0);
		glRotated(90,1,0,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,5.0f,0.0f);
		glVertex3f(2.0f,5.0f,0.0f);
		glVertex3f(2.0f,-2.0f,0.0f);
		glVertex3f(-2.0f,-2.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);//atas
		glTranslatef(0,0.5,-5.0);
		glRotated(90,1,0,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,5.0f,0.0f);
		glVertex3f(2.0f,5.0f,0.0f);
		glVertex3f(2.0f,-2.0f,0.0f);
		glVertex3f(-2.0f,-2.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);// belakang
		glTranslatef(-1,-0.5,-7.0);
		glBegin(GL_QUADS);
		glVertex3f(-1.0f,1.0f,0.0f);
		glVertex3f(3.0f,1.0f,0.0f);
		glVertex3f(3.0f,0.5f,0.0f);
		glVertex3f(-1.0f,0.5f,0.0f);
		glEnd();
	glPopMatrix(); 
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);// kanan
		glTranslatef(2,-2.5,-5.0);
		glRotated(-90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,3.0f,0.0f);
		glVertex3f(5.0f,3.0f,0.0f);
		glVertex3f(5.0f,2.5f,0.0f);
		glVertex3f(-2.0f,2.5f,0.0f);
		glEnd();
	glPopMatrix(); 
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);// kiri
		glTranslatef(-2.0,-2.5,-5.0);
		glRotated(-90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,3.0f,0.0f);
		glVertex3f(5.0f,3.0f,0.0f);
		glVertex3f(5.0f,2.5f,0.0f);
		glVertex3f(-2.0f,2.5f,0.0f);
		glEnd();
	glPopMatrix(); 
    glPushMatrix(); //muatan
		glColor3f(0,0.6,0.1);//depan
		glTranslatef(1,0.5,-0.2);
		glBegin(GL_QUADS);
		glVertex3f(-3.0f,4.0f,0.0f);
		glVertex3f(1.0f,4.0f,0.0f);
		glVertex3f(1.0f,0.0f,0.0f);
		glVertex3f(-3.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix(); 
		glColor3f(0,0.6,0.1);//belakang
		glTranslatef(1,0.5,-7.0);
		glBegin(GL_QUADS);
		glVertex3f(-3.0f,4.0f,0.0f);
		glVertex3f(1.0f,4.0f,0.0f);
		glVertex3f(1.0f,0.0f,0.0f);
		glVertex3f(-3.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(0,0.6,0.1);// kanan
		glTranslatef(2,0.5,-4.0);
		glRotated(-90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-3.0f,4.0f,0.0f);
		glVertex3f(3.8f,4.0f,0.0f);
		glVertex3f(3.8f,0.0f,0.0f);
		glVertex3f(-3.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix(); 
		glPushMatrix();
		glColor3f(0,0.6,0.1);// kiri
		glTranslatef(-2,0.5,-4.0);
		glRotated(-90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-3.0f,4.0f,0.0f);
		glVertex3f(3.8f,4.0f,0.0f);
		glVertex3f(3.8f,0.0f,0.0f);
		glVertex3f(-3.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();//sambungan
    	glColor3f(0.3,0.3,0.3);//depan
		glTranslatef(1.5,-2.0,-7.0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,2.5f,0.0f);
		glVertex3f(-1.0f,2.5f,0.0f);
		glVertex3f(-1.0f,2.0f,0.0f);
		glVertex3f(-2.0f,2.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);//bawah
		glTranslatef(1.5,0.0,-9.0);
		glRotated(90,1,0,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,2.0f,0.0f);
		glVertex3f(-1.0f,2.0f,0.0f);
		glVertex3f(-1.0f,0.0f,0.0f);
		glVertex3f(-2.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);//atas
		glTranslatef(1.5,0.5,-9.0);
		glRotated(90,1,0,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,2.0f,0.0f);
		glVertex3f(-1.0f,2.0f,0.0f);
		glVertex3f(-1.0f,0.0f,0.0f);
		glVertex3f(-2.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
    	glColor3f(0.3,0.3,0.3);//belakang
		glTranslatef(1.5,0.5,-9.0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,2.5f,0.0f);
		glVertex3f(-1.0f,2.5f,0.0f);
		glVertex3f(-1.0f,2.0f,0.0f);
		glVertex3f(-2.0f,2.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);// kanan
		glTranslatef(0.5,-1.5,-8.0);
		glRotated(-90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-1.0f,2.0f,0.0f);
		glVertex3f(1.0f,2.0f,0.0f);
		glVertex3f(1.0f,1.5f,0.0f);
		glVertex3f(-1.0f,1.5f,0.0f);
		glEnd();
	glPopMatrix(); 
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);// kiri
		glTranslatef(-0.5,-1.5,-8.0);
		glRotated(-90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-1.0f,2.0f,0.0f);
		glVertex3f(1.0f,2.0f,0.0f);
		glVertex3f(1.0f,1.5f,0.0f);
		glVertex3f(-1.0f,1.5f,0.0f);
		glEnd();
	glPopMatrix(); 
	glPushMatrix();// gerbong 
		glColor3f(0.3,0.3,0.3);//depan
		glTranslatef(-1,-0.5,-8.0);
		glBegin(GL_QUADS);
		glVertex3f(-1.0f,1.0f,0.0f);
		glVertex3f(3.0f,1.0f,0.0f);
		glVertex3f(3.0f,0.5f,0.0f);
		glVertex3f(-1.0f,0.5f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);//bawah
		glTranslatef(0,0.0,-13.0);
		glRotated(90,1,0,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,5.0f,0.0f);
		glVertex3f(2.0f,5.0f,0.0f);
		glVertex3f(2.0f,-2.0f,0.0f);
		glVertex3f(-2.0f,-2.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);//atas
		glTranslatef(0,0.5,-13.0);
		glRotated(90,1,0,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,5.0f,0.0f);
		glVertex3f(2.0f,5.0f,0.0f);
		glVertex3f(2.0f,-2.0f,0.0f);
		glVertex3f(-2.0f,-2.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);// belakang
		glTranslatef(-1,-0.5,-15.0);
		glBegin(GL_QUADS);
		glVertex3f(-1.0f,1.0f,0.0f);
		glVertex3f(3.0f,1.0f,0.0f);
		glVertex3f(3.0f,0.5f,0.0f);
		glVertex3f(-1.0f,0.5f,0.0f);
		glEnd();
	glPopMatrix(); 
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);// kanan
		glTranslatef(2,-2.5,-13.0);
		glRotated(-90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,3.0f,0.0f);
		glVertex3f(5.0f,3.0f,0.0f);
		glVertex3f(5.0f,2.5f,0.0f);
		glVertex3f(-2.0f,2.5f,0.0f);
		glEnd();
	glPopMatrix(); 
	glPushMatrix();
	glColor3f(0.3,0.3,0.3);// kiri
		glTranslatef(-2,-2.5,-13.0);
		glRotated(-90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-2.0f,3.0f,0.0f);
		glVertex3f(5.0f,3.0f,0.0f);
		glVertex3f(5.0f,2.5f,0.0f);
		glVertex3f(-2.0f,2.5f,0.0f);
		glEnd();
	glPopMatrix(); 
    glPushMatrix(); //muatan
		glColor3f(0,0.6,0.1);//depan
		glTranslatef(1,0.5,-8.2);
		glBegin(GL_QUADS);
		glVertex3f(-3.0f,4.0f,0.0f);
		glVertex3f(1.0f,4.0f,0.0f);
		glVertex3f(1.0f,0.0f,0.0f);
		glVertex3f(-3.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix(); 
		glColor3f(0,0.6,0.1);//belakang
		glTranslatef(1,0.5,-15.0);
		glBegin(GL_QUADS);
		glVertex3f(-3.0f,4.0f,0.0f);
		glVertex3f(1.0f,4.0f,0.0f);
		glVertex3f(1.0f,0.0f,0.0f);
		glVertex3f(-3.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(0,0.6,0.1);// kanan
		glTranslatef(2,0.5,-12.0);
		glRotated(-90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-3.0f,4.0f,0.0f);
		glVertex3f(3.8f,4.0f,0.0f);
		glVertex3f(3.8f,0.0f,0.0f);
		glVertex3f(-3.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix(); 
		glPushMatrix();
		glColor3f(0,0.6,0.1);// kiri
		glTranslatef(-2,0.5,-12.0);
		glRotated(-90,0,1,0);
		glBegin(GL_QUADS);
		glVertex3f(-3.0f,4.0f,0.0f);
		glVertex3f(3.8f,4.0f,0.0f);
		glVertex3f(3.8f,0.0f,0.0f);
		glVertex3f(-3.0f,0.0f,0.0f);
		glEnd();
	glPopMatrix(); 
    glPushMatrix();
		glColor3f(0.0f,0.0f,0.0f);
	    glTranslatef(-2,0,-9.5);
	    glRotated(90,0,1,0);
	    glutSolidTorus(0.3,0.4,14,30);  // roda muatan kiri depan
    glPopMatrix();
    glPushMatrix();
	    glColor3f(0.0f,0.0f,0.0f);
	    glTranslatef(2,0,-9.5);
	    glRotated(90,0,1,0);
	    glutSolidTorus(0.3,0.4,14,30); // roda muatan kanan depan
    glPopMatrix();
    glPushMatrix();
		glColor3f(0.0f,0.0f,0.0f);
	    glTranslatef(-2,0,-13.5);
	    glRotated(90,0,1,0);
	    glutSolidTorus(0.3,0.4,14,30);  // roda muatan kiri belakang
    glPopMatrix();
    glPushMatrix();
	    glColor3f(0.0f,0.0f,0.0f);
	    glTranslatef(2,0,-13.5);
	    glRotated(90,0,1,0);
	    glutSolidTorus(0.3,0.4,14,30); // roda muatan kanan belakang
    glPopMatrix();
    glPushMatrix();
		glColor3f(1,1,1); //lampu muatan kiri
		glTranslatef(-2.3,-0.5,-15.003);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,0,0);
		glTranslatef(-2.6,-0.5,-15.002);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,1,0);
		glTranslatef(-2.95,-0.5,-15.001);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,1,1); //lampu muatan kanan
		glTranslatef(-0.1,-0.5,-15.003);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,0,0);
		glTranslatef(0.2,-0.5,-15.002);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
	glPushMatrix();
		glColor3f(1,1,0);
		glTranslatef(0.55,-0.5,-15.001);
		glBegin(GL_QUADS);
		glVertex3f(1.0f,1.0f,0.0f);
		glVertex3f(1.4f,1.0f,0.0f);
		glVertex3f(1.4f,0.6f,0.0f);
		glVertex3f(1.0f,0.6f,0.0f);
		glEnd();
	glPopMatrix();
    glPopMatrix();
	}
void display() {
	// Kalau move dan angle tidak nol, gerakkan kamera...
	if (deltaMove)
	moveMeFlat(deltaMove);
	if (deltaAngle) {
	angle += deltaAngle;
	orientMe(angle);
}
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
	// Gambar grid
	Grid();
	// Gambar objek di sini...
	TrukGandeng();
	glutSwapBuffers();
	glFlush();
}
void pressKey(int key, int x, int y) {
	// Fungsi ini akan dijalankan saat tombol keyboard ditekan dan belum dilepas
	// Selama tombol ditekan, variabel angle dan move diubah => kamera bergerak
	switch (key) {
	case GLUT_KEY_LEFT : deltaAngle = -0.005f;break;
	case GLUT_KEY_RIGHT : deltaAngle = 0.005f;break;
	case GLUT_KEY_UP : deltaMove = 1;break;
	case GLUT_KEY_DOWN : deltaMove = -1;break;
}
}
void releaseKey(int key, int x, int y) {
	// Fungsi ini akan dijalankan saat tekanan tombol keyboard dilepas
	// Saat tombol dilepas, variabel angle dan move diset nol => kamera berhenti
	switch (key) {
	case GLUT_KEY_LEFT :
	if (deltaAngle < 0.0f)
	deltaAngle = 0.0f;
	break;
	case GLUT_KEY_RIGHT : if (deltaAngle > 0.0f)
	deltaAngle = 0.0f;
	break;
	case GLUT_KEY_UP : if (deltaMove > 0)
	deltaMove = 0;
	break;
	case GLUT_KEY_DOWN : if (deltaMove < 0)
	deltaMove = 0;
	break;
}
}
// Variable untuk pencahayaan
	const GLfloat light_ambient[] = { 0.5f, 0.5f, 0.5f, 0.0f };
	const GLfloat light_diffuse[] = { 1.0f, 1.0f, 1.0f, 1.0f };
	const GLfloat light_specular[] = { 1.0f, 1.0f, 1.0f, 1.0f };
	const GLfloat light_position[] = { 0.0f, 20.0f, 10.0f, 1.0f };
	const GLfloat mat_ambient[] = { 0.7f, 0.7f, 0.7f, 1.0f };
	const GLfloat mat_diffuse[] = { 0.8f, 0.8f, 0.8f, 1.0f };
	const GLfloat mat_specular[] = { 1.0f, 1.0f, 1.0f, 1.0f };
	const GLfloat high_shininess[] = { 100.0f };
void lighting(){
	// Fungsi mengaktifkan pencahayaan
	glEnable(GL_DEPTH_TEST);
	glDepthFunc(GL_LESS);
	glEnable(GL_LIGHT0);
	glEnable(GL_NORMALIZE);
	glEnable(GL_COLOR_MATERIAL);
	glEnable(GL_LIGHTING);
	glLightfv(GL_LIGHT0, GL_AMBIENT, light_ambient);
	glLightfv(GL_LIGHT0, GL_DIFFUSE, light_diffuse);
	glLightfv(GL_LIGHT0, GL_SPECULAR, light_specular);
	glLightfv(GL_LIGHT0, GL_POSITION, light_position);
	glMaterialfv(GL_FRONT, GL_AMBIENT, mat_ambient);
	glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_diffuse);
	glMaterialfv(GL_FRONT, GL_SPECULAR, mat_specular);
	glMaterialfv(GL_FRONT, GL_SHININESS, high_shininess);
}
void init(void)
{
	glClearColor(1.0,1.0,1.0,0.0);
	glEnable (GL_DEPTH_TEST);
	glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);
}
int main(int argc, char **argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DEPTH | GLUT_DOUBLE | GLUT_RGBA);
	glutInitWindowPosition(100,100);
	glutInitWindowSize(640,480);
	glutCreateWindow("3D Lighting");
	glutIgnoreKeyRepeat(1); // Mengabaikan key repeat (saat tombol keyboard dipencet terus)
	glutSpecialFunc(pressKey);
	glutSpecialUpFunc(releaseKey);
	glutDisplayFunc(display);
	glutIdleFunc(display); // Fungsi display-nya dipanggil terus-menerus
	glutReshapeFunc(Reshape);
	lighting();
	init();
	glutMainLoop();
	return(0);
}